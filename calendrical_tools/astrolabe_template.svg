<svg id="diagram" viewbox="0 0 250 250" height="250" width="250" xmlns="http://www.w3.org/2000/svg" 
	xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" xmlns:xlink="http://www.w3.org/1999/xlink"
	onload="init(evt)">
	<g id="astrolabe" transform="translate(125,125) scale(1, -1)" {{ inkscape.astrolabe }}>
	    <title>Astrolabe Plate</title>
	    <defs>
			<style type="text/css">
				#plate {
				  clip-path:url(#Capricorn);
				  clipPath: url(#Capricorn);
				}
				#description {
				  fill: {{ background_color }}
				  text-anchor: middle;
				  font-size: 6pt;
				}
				#horizon {
				  fill: none;
				  stroke: {{ background_color }}
				  stroke-width: 1;
				  stroke-opacity: 0.8;
				}
				#tropics {
				  fill: none;
				  stroke: {{ background_color }}
				  stroke-width: 1;
				  stroke-opacity: 0.5;
				  clip-path: url(#almucantarHole);
				}
				#almucantar {
				  fill: none;
				  stroke: {{ graph_color }}
				  stroke-width: 0.5;
				  stroke-opacity: 0.5;
				}
				#azimuth {
				  fill: none;
				  stroke: {{ graph_color }}
				  stroke-width: 0.5;
				  stroke-opacity: 0.5;
				  clip-path:url(#Horizon);
				  clipPath: url(#Horizon);
				}
				#azimuthsGroup {
				  clip-path: url(#almucantarHole);
				}
				#primeVertical {
				  fill: none;
				  stroke: {{ graph_color }}
				  stroke-width: 0.75;
				  stroke-opacity: 0.8;
				  clip-path:url(#Horizon);
				  clipPath: url(#Horizon);
				}
				#axisGroup {
				  fill: none;
				  stroke: {{ background_color }}
				  stroke-width: 1;
				  stroke-opacity: 0.5;
				  clip-path: url(#descriptionHole);
				}
				#tick {
				  stroke: {{ background_color }}
				  stroke-width: 0.5;
				}
				#tickLong {
				  stroke: {{ background_color }}
				  stroke-width: 1;
				}
				#eclipticDiagram {
				  fill: {{ stroke_color }}
				  fill-opacity: 1;
				  stroke: {{ stroke_color }}
				  stroke-width: 0.7;
				  stroke-opacity: 0.7;
				  clip-path: url(#eclipticHole);
				}
				#eclipticDivision, #ariesFirstPoint {
				  stroke: {{ stroke_color }};
				  stroke-width: 1;
				  stroke-opacity: 1;
				}
				#eclipticDivisionFine {
				  stroke: {{ stroke_color }};
				  stroke-width: 0.6;
				  stroke-opacity: 0.6;
				}
				#eclipticDivisionExtraFine {
				  stroke: {{ stroke_color }};
				  stroke-width: 0.4;
				  stroke-opacity: 0.4;
				}
				#limb {
				  fill: none;
				  stroke: {{ background_color }}
				  stroke-opacity: 0.5;
				  stroke-width: 1;
				}
			</style>

			<symbol viewBox="0 0 20 20" id="star" style="overflow: visible">
		        <title>star</title>
		        <polygon points="48.37 61.63 3.43 55 48.37 48.37 55 3.43 61.63 48.37 106.57 55 61.63 61.63 55 106.57 48.37 61.63"/>
		    </symbol>

			<clipPath id="Capricorn">
				<path id="capricornPath" d="
						M0 {{ RCapricorn }}
						A{{ RCapricorn }} {{ RCapricorn }} 0 0 1 0 {{ -RCapricorn }}
						A{{ RCapricorn }} {{ RCapricorn }} 0 0 1 0 {{ RCapricorn }}z"
					/>		
			</clipPath>			

			<clipPath id="Horizon">
				<path id="horizonPath" d="
						M{{ horiz.cx }} {{ horiz.cy + horiz.r }} 
						A{{ horiz.r }} {{ horiz.r }} 0 0 1 {{ horiz.cx }} {{ horiz.cy - horiz.r }}
						A{{ horiz.r }} {{ horiz.r }} 0 0 1 {{ horiz.cx }} {{ horiz.cy + horiz.r }}z
					"/>
			</clipPath>

		    <clipPath id="almucantarHole">
				<path id="almucantarHolePath" fill-rule="evenodd"  d="
					M{{ 0 }} {{ RCapricorn }} 
					A{{ RCapricorn }} {{ RCapricorn }} 0 0 1 {{ 0 }} {{ -RCapricorn }}
					A{{ RCapricorn }} {{ RCapricorn }} 0 0 1 {{ 0 }} {{ RCapricorn }}z
					M{{ almucantar_center.cx }} {{ almucantar_center.cy + almucantar_center.r}} 
					A{{ almucantar_center.r }} {{ almucantar_center.r }} 0 1 0 {{ almucantar_center.cx }} {{ almucantar_center.cy - almucantar_center.r }}
					A{{ almucantar_center.r }} {{ almucantar_center.r }} 0 1 0 {{ almucantar_center.cx }} {{ almucantar_center.cy + almucantar_center.r }}z
				"/>
		    </clipPath>

		    <clipPath id="descriptionHole" >
		    	<!-- <rect id="description" x="-10" y="{{ RCapricorn - 20 -7}}" width="20" height="19"/> -->
		    	<path id="test" fill-rule="evenodd" d="
		    		M{{ 0 }} {{ RCapricorn }} 
					A{{ RCapricorn }} {{ RCapricorn }} 0 0 1 {{ 0 }} {{ -RCapricorn }}
					A{{ RCapricorn }} {{ RCapricorn }} 0 0 1 {{ 0 }} {{ RCapricorn }}z
		    		M-10,{{ -RCapricorn + 26 }} 10,{{ -RCapricorn + 26 }} 10,{{ -RCapricorn + 26 - 19 }} -10,{{ -RCapricorn + 26 - 19 }} -10,{{ -RCapricorn + 26 }} 0,{{ -RCapricorn }}

		    	"/>
		    </clipPath>

		    <clipPath id="eclipticBoundary">
		    	<path id="eclipticArc" fill-rule="evenodd" d="
					M{{ top_middle_outer.x }} {{ top_middle_outer.y }}
					A{{ outer_radius }} {{ outer_radius }} 0 1 0 {{ bottom_middle_outer.x }} {{ bottom_middle_outer.y }}
					A{{ outer_radius }} {{ outer_radius }} 0 1 0 {{ top_middle_outer.x }} {{ top_middle_outer.y }}z"/>
		    </clipPath>

		    <clipPath id="eclipticHole">
		    	<path id="eclipticHolePath" fill-rule="evenodd" d="
					M{{ top_middle_outer.x }} {{ top_middle_outer.y }}
					A{{ outer_radius }} {{ outer_radius }} 0 0 1 {{ bottom_middle_outer.x }} {{ bottom_middle_outer.y }}
					A{{ outer_radius }} {{ outer_radius }} 0 0 1 {{ top_middle_outer.x }} {{ top_middle_outer.y }}z
					M{{ top_middle_inner.x }} {{ top_middle_inner.y }}
					A{{ inner_radius }} {{ inner_radius }} 0 1 0 {{ bottom_middle_inner.x }} {{ bottom_middle_inner.y }}
					A{{ inner_radius }} {{ inner_radius }} 0 1 0 {{top_middle_inner.x }} {{ top_middle_inner.y }}z"/>
		    </clipPath>

		{% for arc in seasonal_arcs %}
			<path id="{{ arc.tag }}" d="
				M{{ arc.start_x }} {{ arc.start_y }}
				A{{ arc.r }} {{ arc.r }} 0 0 1 {{ arc.end_x }} {{ arc.end_y }}"/>
		{%- endfor %}

		</defs>

		<g id="plate" {{ inkscape.plate }}>
			<g id="tropics" {{ inkscape.tropics }}>
				<circle cx="0" cy="0" r="{{ RCapricorn }}"/>
				<circle cx="0" cy="0" r="{{ REquator }}"/>
				<circle cx="0" cy="0" r="{{ RCancer }}"/>
			</g>

			<g id="horizonGroup" {{ inkscape.horizon }}>
		        <title>Horizon</title>
		        <circle id="horizon" cx="{{ horiz.cx}}" cy="{{ horiz.cy }}" r="{{ horiz.r }}"/>
	      	</g>

			<g id="azimuthsGroup" {{ inkscape.azimuths }}>
				<title>Azimuth</title>
				{% for coord in azimuth_coords %}
					<circle id="azimuth" az="{{ coord.az }}" cx="{{ coord.cx }}" cy="{{ coord.cy }}" r="{{ coord.r }}"/>
				{%- endfor %}			
		    </g>

			<g id="almucantarsGroup" {{ inkscape.almucantars }}>
				<title>Almucantar</title>
				{% for coord in almucantor_coords %}
					<circle id="almucantar" alt="{{ coord.alt }}" cx="{{ coord.cx }}" cy="{{ coord.cy }}" r="{{ coord.r }}"/>
				{%- endfor %}
			</g>

			<g id="primeVerticalGroup" {{ inkscape.prime_vertical }}>
				<circle id="primeVertical" cx="{{ prime_vertical.cx }}" cy="{{ prime_vertical.cy }}" r="{{ prime_vertical.r }}"/>
			</g>

			<!-- <use xlink:href="#test" style="fill:green;"/> -->

			<g id="axisGroup" {{ inkscape.axis }}>
	      		<line id="axis" x1="0" y1="{{ -RCapricorn }}" x2="0" y2="{{ RCapricorn }}"/>
        		<line id="axis" x1="{{ -RCapricorn }}" y1="0" x2="{{ RCapricorn }}" y2="0"/>
    		</g>

    		<g id="descriptionGroup" {{ inkscape.description }} transform="scale(1, -1)">
				<text id="description" x="0" y="{{ RCapricorn - 19 }}">
					{{ place_name }}
		    		<tspan x="0" dy="1.2em">{{ latitude }} </tspan>
		    	</text>
			</g>
	    </g>

		<g id="limb" {{ inkscape.limb }}>
			<title>Limb</title>

			<g id="limb_boundaries" {{ inkscape.limb_boundaries }}>
				<circle id="limb" cx="0" cy="0" r="{{ ticks.inner_radius }}"/>
				<circle id="limb" cx="0" cy="0" r="{{ ticks.center_radius }}"/>
				<circle id="limb" cx="0" cy="0" r="{{ ticks.outer_radius }}"/>
			</g>
			<g id="ticks" {{ inkscape.ticks }}>
				<g id="short_ticks" {{ inkscape.short_ticks }}>
					<line id="tick" x1="0" y1="{{ ticks.inner_radius }}" x2="0" y2="{{ ticks.center_radius }}"/>
					{% for angle in ticks.short_tick_angles %}
				    	<use id="tick" xlink:href="#tick" transform="rotate({{ angle }})"/>
					{%- endfor %}
				</g>
				<g id="long_ticks" {{ inkscape.long_ticks }}>
				    <line id="tickLong" x1="0" y1="{{ ticks.inner_radius }}" x2="0" y2="{{ ticks.outer_radius }}"/>
					{% for angle in ticks.long_tick_angles %}
				    	<use id="tickLong" xlink:href="#tickLong" transform="rotate({{ angle }})"/>
					{%- endfor %}
				</g>
		    </g>
		</g>

		<g id = "rete" {{ inkscape.rete }} transform="rotate(270)">
			<g id="reteBackground" transform="translate({{ ecliptic.cx }} , {{ ecliptic.cy }})">
				<circle cx="0" cy="0" r="{{ ecliptic.r }}" style="fill:{{ stroke_color }}; fill-opacity:0.05; stroke:{{ stroke_color }};"/>
				<line id="ariesFirstPoint" x1="{{ aries_first_point.x2 }}" y1="{{ -ecliptic.cy }}" x2="{{ -RCapricorn }}" y2="{{ -ecliptic.cy }}"/>

				{% for arc in seasonal_arcs %}
					<text transform="translate({{ -ecliptic.cx }} , {{ -ecliptic.cy }}), scale(-1, 1)"><textPath xlink:href="#{{ arc.tag }}" style="stroke:none; fill:black; fill-opacity:0.6; font-size:4pt;" startOffset="0em"><tspan dy="2em">{{ arc.name }}</tspan></textPath></text>
				{%- endfor %}
			</g>

			<g id="eclipticDiagram" {{ inkscape.ecliptic }}>
		    	<title>Ecliptic</title>
				<!-- <path id="eclipticPath" fill-rule="evenodd" d="
					M{{ top_middle_outer.x }} {{ top_middle_outer.y }}
					A{{ outer_radius }} {{ outer_radius }} 0 0 1 {{ bottom_middle_outer.x }} {{ bottom_middle_outer.y }}
					A{{ outer_radius }} {{ outer_radius }} 0 0 1 {{ top_middle_outer.x }} {{ top_middle_outer.y }}z
					M{{ top_middle_inner.x }} {{ top_middle_inner.y }}
					A{{ inner_radius }} {{ inner_radius }} 0 0 1 {{ bottom_middle_inner.x }} {{ bottom_middle_inner.y }}
					A{{ inner_radius }} {{ inner_radius }} 0 0 1 {{top_middle_inner.x }} {{ top_middle_inner.y }}z"/> -->

			    <g id="eclipticDivisions">
			        <title>Divide Ecliptic</title>
			        
			        {% for division in ecliptic_divisions %}
			            <line id="eclipticDivision" x1="0" y1="0" x2="{{ division.x2 }}" y2="{{ division.y2 }}"/>
			        {%- endfor %}

			        {% for division in ecliptic_divisions_fine %}
			            <line id="eclipticDivisionFine" x1="0" y1="0" x2="{{ division.x2 }}" y2="{{ division.y2 }}"/>
			        {%- endfor %}

			        {% for division in ecliptic_divisions_efine %}
			            <line id="eclipticDivisionExtraFine" x1="0" y1="0" x2="{{ division.x2 }}" y2="{{ division.y2 }}"/>
			        {%- endfor %}
			    </g>
			    
  			</g>

  			<!-- <g>
  				<line id="eclipticPole" x1="-5" y1="{{ ecliptic_pole }}" x2="5" y2="{{ ecliptic_pole }}" style="stroke: grey;"/>
				<line id="eclipticPole" x1="0" y1="{{ ecliptic_pole -5 }}" x2="0" y2="{{ ecliptic_pole + 5 }}" style="stroke: grey;"/>
  			</g> -->

			<!-- <g>
  				<line id="eclipticCenter" x1="-50" y1="{{ ecliptic.cy }}" x2="50" y2="{{ ecliptic.cy }}" style="stroke: grey; stroke-width:0.5;"/>
				<line id="eclipticCenter" x1="0" y1="{{ ecliptic.cy - 50 }}" x2="0" y2="{{ ecliptic.cy + 50}}" style="stroke: grey; stroke-width:0.5;"/>
  			</g> -->
		        
		 	<g id="stars" {{ inkscape.stars }} transform="rotate({{ 180 }})">
		    	<title>Stars</title>
		    	<g>
		    		{% for star in stars %}
		    		<g id="{{ star.name }}">
		    			<title>{{ star.name }}</title>
		    			<use x="{{ star.cx }}" y="{{ star.cy }}" width="1.5" height="1.5"  xlink:href="#star" style="fill:{{ stroke_color }};"/>
						<!-- <g transform="translate({{ star.cx }}, {{ star.cy }})">
							<text x="0" y="0" transform="scale(1, -1), rotate(180)" style="font-size:2pt; fill:black; fill-opacity:0.5;"><tspan dy="1.5em">{{ star.name }}</tspan></text>
						</g> -->
					</g>
		    		{%- endfor %}
		    	</g>
		    </g>

		    <g id="planets" {{ inkscape.planets }} transform="translate({{ ecliptic.cx }}, {{ ecliptic.cy }})">
		    	<title>Planets</title>
		    	<circle id="moon" cx="78.3193942774644" cy="60.97340898963562" r="3" style="fill:white; stroke:black;" />
		    	<circle id="sun"  cx="-42.2168611201463"  cy="77.60260956071288
		    		" r="2" style="fill:yellow;"/>
		    </g>
		</g>
		
	</g>
	<text id="output" x="120" y="230" style="font-size:4pt; fill:black; stroke:none;" text-anchor="middle"></text>
	<script type="application/ecmascript">
    // <![CDATA[
    var txt = document.getElementById("output");
    var r = document.getElementById("moonLine");
    var totalAngle = 270;
    var startAngle = 0;

    active = false;
    
    function init(evt) {
        var obj;
        obj = document.getElementById("diagram");

        obj.addEventListener("dblclick", dblclickButton, false);

        obj.addEventListener("mousedown", startDrag, false);
        obj.addEventListener("mousemove", doDrag, false);
        obj.addEventListener("mouseup", endDrag, false);

        obj.addEventListener("touchstart", startDrag, false);
        obj.addEventListener("touchmove", doDrag, false);
        obj.addEventListener("touchend", endDrag, false);
    }
    
    function angle(cx, cy, ex, ey) {
      var dy = ey - cy;
      var dx = ex - cx;
      var theta = Math.atan2(dy, dx); // range (-PI, PI]
      theta *= 180 / Math.PI; // rads to degs, range (-180, 180]
      //if (theta < 0) theta = 360 + theta; // range [0, 360)
      return theta;
    }
    
    function dblclickButton(evt) {
       	var svg = document.getElementById('diagram');
       	var rete = document.getElementById('rete');
        var pt = svg.createSVGPoint();
        
        pt.x = evt.clientX; 
        pt.y = evt.clientY; 

        var ec = document.getElementById('astrolabe');
        var svgP = pt.matrixTransform(ec.getScreenCTM().inverse());
        console.log(ec, svgP);

        var rotAngle = angle(0, 0, Math.floor(svgP.x), Math.floor(svgP.y)) + 180;
        rete.setAttribute("transform", "rotate(" + rotAngle + ")");
        totalAngle = rotAngle;
    }
    
    function startDrag(evt) {
        <!-- console.log(evt.target.parentNode.getAttribute("id")); -->
        var svg = document.getElementById('diagram');
        var pt = svg.createSVGPoint();
        
        pt.x = evt.clientX; 
        pt.y = evt.clientY;
        console.log("start", pt.x, pt.y, evt.offsetX, evt.offsetY);
        
        var ec = document.getElementById('axisGroup');
        var svgP = pt.matrixTransform(ec.getScreenCTM().inverse());
        startAngle = angle(0, 0, svgP.x, svgP.y);

        var eclipticCoords = document.getElementById('stars');
        var svgPEcliptic = pt.matrixTransform(eclipticCoords.getScreenCTM().inverse());
        eclipticAngle = angle(0, 0, svgPEcliptic.x, svgPEcliptic.y);

		<!-- printMsg(pt.x + " " + pt.y + " | " + svgPEcliptic.x + " " + svgPEcliptic.y + " | " + eclipticAngle); -->
        <!-- printMsg(pt.x + " " + pt.y + " | " + svgP.x + " " + svgP.y + " | " + angle(0, 0, svgP.x, svgP.y)); -->

        active = true;
    }
    
    function doDrag(evt) {
		if (active){
			var ec = document.getElementById('axisGroup'); 
	        var rete = document.getElementById('rete');
	        var svg = document.getElementById('diagram');

	        var pt = svg.createSVGPoint(); 
	        pt.x = evt.clientX; 
	        pt.y = evt.clientY;
	        <!-- console.log("drag", pt.x, pt.y, evt.offsetX, evt.offsetY) -->
	        
	        var svgP = pt.matrixTransform(ec.getScreenCTM().inverse());
	        var rotAngle = angle(0, 0, svgP.x, svgP.y);

	        delta = (rotAngle - startAngle) / 100.0;
	        console.log(delta);
	        totalAngle = totalAngle + delta;
	        
	        <!-- printMsg(pt.x + " " + pt.y + " | " + svgP.x + " " + svgP.y + " | " + rotAngle); -->
	        rete.setAttribute("transform", "rotate(" + totalAngle + ")");
		}
    }

    function endDrag(evt){
    	active = false;
        var svg = document.getElementById('diagram');
        var pt = svg.createSVGPoint();
        
        pt.x = evt.clientX; 
        pt.y = evt.clientY;
    	<!-- console.log("end", pt.x, pt.y, evt.offsetX, evt.offsetY); -->

    	var eclipticCoords = document.getElementById('stars');
        var svgPEcliptic = pt.matrixTransform(eclipticCoords.getScreenCTM().inverse());
        eclipticAngle = angle(0, 0, svgPEcliptic.x, svgPEcliptic.y);

		<!-- printMsg(pt.x + " " + pt.y + " | " + svgPEcliptic.x + " " + svgPEcliptic.y + " | " + eclipticAngle); -->

    }
    
    function printMsg (msg){
        txt.textContent=msg;    
    }
    // ]]>
	</script>
</svg>
